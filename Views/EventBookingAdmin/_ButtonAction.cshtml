@using Codesanook.EventManagement.Models
@using Codesanook.EventManagement.Controllers

@if (Model.Status == EventBookingStatus.VerifyingPayment)
{
    @Html.React(
                   "CodesanookEventManagement.ConfirmationActionButton",
                   new
                   {
                       actionUrl = Url.Action(
                           nameof(EventBookingAdminController.Approve),
                           new { id = Model.Id }
                       ),
                       formParameters = new
                       {
                           __RequestVerificationToken = Html.AntiForgeryTokenValueOrchard().ToString()
                       },
                       actionButtonMessage = "Approve",
                       confirmationTitle = "Confirm to approve",
                       confirmationMessage = "Are you sure you want to approve this booking?"
                   },
                   htmlTag: "span",
                   containerClass: "btn-action btn-primary"
               )

    @Html.React(
                   "CodesanookEventManagement.ConfirmationActionButton",
                   new
                   {
                       actionUrl = Url.Action(
                           nameof(EventBookingAdminController.InvalidPayment),
                           new { id = Model.Id }
                       ),
                       formParameters = new
                       {
                           __RequestVerificationToken = Html.AntiForgeryTokenValueOrchard().ToString()
                       },
                       actionButtonMessage = "Invalid payment",
                       confirmationTitle = "Confirm to set payment to invalid",
                       confirmationMessage = "Are you sure you want to set this payment to invalid?"
                   },
                   htmlTag: "span",
                   containerClass: "btn-action btn-warning"
               )
}

@if (Model.Status == EventBookingStatus.InvalidPayment)
{

    @Html.React(
                   "CodesanookEventManagement.ConfirmationActionButton",
                   new
                   {
                       actionUrl = Url.Action(
                           nameof(EventBookingAdminController.Cancel),
                           new { id = Model.Id }
                       ),
                       formParameters = new
                       {
                           __RequestVerificationToken = Html.AntiForgeryTokenValueOrchard().ToString()
                       },
                       actionButtonMessage = "Cancel payment",
                       confirmationTitle = "Confirm to cancel booking",
                       confirmationMessage = "Are you sure you want to cancel this booking?"
                   },
                   htmlTag: "span",
                   containerClass: "btn-action btn-danger"
               )
}

@if (Model.Status == EventBookingStatus.Successful)
{
    @Html.React(
                   "CodesanookEventManagement.ConfirmationActionButton",
                   new
                   {
                       actionUrl = Url.Action(
                           nameof(EventBookingAdminController.Refund),
                           new { id = Model.Id }
                       ),
                       formParameters = new
                       {
                           __RequestVerificationToken = Html.AntiForgeryTokenValueOrchard().ToString()
                       },
                       actionButtonMessage = "Refund",
                       confirmationTitle = "Confirm to refund",
                       confirmationMessage = "Are you sure you want to refund this booking?"
                   },
                   htmlTag: "span",
                   containerClass: "btn-action btn-secondary"
               )
}




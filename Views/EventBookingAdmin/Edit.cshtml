@using Codesanook.EventManagement.Models
@using Codesanook.AmazonS3.Controllers
@using Codesanook.EventManagement.Controllers
@model EventBookingRecord
@{
    Layout.Title = T("Edit event booking").ToString();

    Style.Require("Bootstrap").AtHead();
    Script.Require("React").AtHead();
    Script.Require("ReactDOM").AtHead();
    Script.Include("codesanook-event-management.js").AtHead();
    Style.Include("codesanook-event-management.css").AtHead();

    var reactInitShape = New.ReactInit();
    WorkContext.Layout.Footer.Add(reactInitShape);

    // Get file URL from file key
    var fileUrl = Url.Action(
        nameof(FileController.GetFile),
        "File",
        new
        {
            area = "Codesanook.AmazonS3",
            fileKey = Model.PaymentConfirmationAttachementFileKey
        }
    );

    // Ending status is successful, refund and cancel
    // To improve tracking status log
}

<a class="btn-link" href="@Url.Action(nameof(EventBookingAdminController.Index))">
    < Back
</a>
@using (Html.BeginFormAntiForgeryPost())
{
    <fieldset>
        @Html.React(
            "CodesanookEventManagement.AttachedPaymentFileModal",
            new { attachedPaymentFileUrl = fileUrl }
        )
        <div>
            Status @Model.Status
        </div>
        <div>
            @if (Model.Status == EventBookingStatus.VerifyingPayment)
            {
                @Html.Partial("_ButtonActionApprove", Model)

                @Html.Partial("_ButtonActionInvalidPayment", Model)
            }

            @if (Model.Status == EventBookingStatus.InvalidPayment)
            {
                @Html.Partial("_ButtonActionApprove", Model)

                @Html.Partial("_ButtonActionInvalidPayment", Model)

                @Html.Partial("_ButtonActionCancel", Model)
            }

            @if (Model.Status == EventBookingStatus.Successful)
            {
                @Html.Partial("_ButtonActionRefund", Model)
            }
        </div>
    </fieldset>
}
